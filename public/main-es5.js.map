{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","toastr","user","username","password","authenticateUser","subscribe","data","success","timeOut","storeUserData","token","navigate","error","onSubmit","NavbarComponent","logout","ProfileComponent","getProfile","err","RegisterComponent","componentDestroyed$","name","email","validateUser","validateEmail","registerUser","pipe","AuthGuard","console","log","loggedIn","AuthService","http","headers","append","post","undefined","re","test","String","toLowerCase","loadToken","authToken","get","localStorage","getItem","setItem","JSON","stringify","clear","jwtHelper","isTokenExpired","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate:[AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthService } from './services/auth.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Personal Budget</h1>\n  <p class=\"lead\">Your Personal Web Budget Book</p>\n  <div>\n    <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-primary\" [routerLink]=\"['/login']\">Login</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n    this.authService.authenticateUser(user).\n      subscribe((data: any) => {\n        if(data.success){\n          this.toastr.success('Successfully Logged in', 'Success',{timeOut: 3000});\n          this.authService.storeUserData(data.token, data.user);\n          this.router.navigate(['dashboard']);\n        } else {\n          this.toastr.error('Login Failed!! Please check your username and password', 'Error',{timeOut: 3000});\n          this.router.navigate(['login']);\n        }\n      });\n  }\n\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onLogout(){\n    this.authService.logout();\n    this.toastr.success('Successfully Logged Out', 'Success',{timeOut: 3000});\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <a class=\"navbar-brand\">Personal Budget</a>\n    </div>\n    <div id=\"navbar\" class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav navbar-left\">\n        <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]= \"{exact:true}\"><a [routerLink]=\"['/']\">Home</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]= \"{exact:true}\"><a [routerLink]=\"['/dashboard']\">Dashboard</a></li>\n        <li *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]= \"{exact:true}\"><a [routerLink]=\"['/profile']\">Profile</a></li>\n        <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]= \"{exact:true}\"><a [routerLink]=\"['/login']\">Login</a></li>\n        <li *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]= \"{exact:true}\"><a [routerLink]=\"['/register']\">Register</a></li>\n        <li *ngIf=\"!authService.loggedIn()\"><a (click)=\"onLogout()\" href=\"#\">Logout</a></li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService,\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().\n      subscribe((data: any) => {\n        this.user = data.user;\n      },\n      err => {\n        this.toastr.error('Unauthorized user', 'Error',{timeOut: 3000});\n        return false;\n      });\n  }\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{user.username}}</li>\n    <li class=\"list-group-item\">Email: {{user.email}}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  componentDestroyed$: Subject<boolean> = new Subject();\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  constructor(private authService: AuthService,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n    if(!this.authService.validateUser(user)){\n      this.toastr.error('Please fill in all details', 'Error',{timeOut: 3000});\n      return false;\n    }\n    if(!this.authService.validateEmail(user.email)){\n      this.toastr.error('Please fill valid email', 'Error',{timeOut: 3000});\n      return false;\n    }\n    this.authService\n      .registerUser(user)\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe((data: any) => {\n        if (data.success) {\n          this.toastr.success('User is created', 'Success',{timeOut: 3000});\n          this.router.navigate(['/login']);\n        } else {\n          this.toastr.error('Unable to create a user', 'Error',{timeOut: 3000});\n          this.router.navigate(['/register']);\n        }\n      });\n  }\n\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"submit\">\n</form>\n","import { Injectable } from '@angular/core';\nimport {Router, CanActivate} from '@angular/router'\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router) { }\n\n  canActivate(){\n  console.log(this.authService.loggedIn());\n    if (this.authService.loggedIn()){\n      this.router.navigate(['/login']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken : any;\n  user: any;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  registerUser(user){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers});\n  }\n\n  validateUser(user){\n\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  authenticateUser(user){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers});\n  }\n\n  getProfile(){\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.authToken\n    });\n    headers.append('Content-Type','application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers});\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user  = null;\n    localStorage.clear();\n  }\n\n  loggedIn(){\n    const jwtHelper = new JwtHelperService();\n    return jwtHelper.isTokenExpired(this.authToken);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}